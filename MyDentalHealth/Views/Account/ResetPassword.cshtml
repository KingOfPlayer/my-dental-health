@model RecoveryPasswordDto

<form method="post" asp-action="ResetPassword" class="needs-validation" novalidate>
	<h1>Reset Password</h1>
	<div class="form-group my-2">
		<label asp-for="Password"></label>
		<input asp-for="Password" class="form-control @(ViewData.ModelState["Password"]?.Errors.Count() > 0?"is-invalid":"")" title="" pattern="(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}" required\>
		<div id="Password" class="invalid-feedback">
			@{
				if (ViewData.ModelState["Password"] is not null)
					foreach (var err in @ViewData.ModelState["Password"]?.Errors)
					{
						@err.ErrorMessage
						<br />
					}
			}
		</div>
	</div>
	<div class="form-group my-2">
		<label asp-for="ValidatePassword">Validate Password</label>
		<input asp-for="ValidatePassword" class="form-control @(ViewData.ModelState["ValidatePassword"]?.Errors.Count() > 0?"is-invalid":"")" title="" pattern="(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}" required\>
		<div id="ValidatePassword" class="invalid-feedback">
			@{
				if (ViewData.ModelState["ValidatePassword"] is not null)
					foreach (var err in @ViewData.ModelState["ValidatePassword"]?.Errors)
					{
						@err.ErrorMessage
						<br />
					}
			}
		</div>
	</div>
	<input asp-for="h" type="hidden"\>
	<input asp-for="t" type="hidden"\>
	<input asp-for="u" type="hidden"\>

	@if (ViewData.ModelState["Success"] is not null)
	{
		<div class="form-group my-2 alert alert-success" role="alert">
			@ViewData.ModelState["Success"]?.Errors?[0].ErrorMessage
		</div>
	}
	<div class="form-group my-2">
		<button type="submit" class="btn btn-primary w-100">Reset Password <i class="fa-solid fa-key"></i></button>
	</div>
</form>