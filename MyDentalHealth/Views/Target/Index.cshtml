@model List<Target> 

<h1 class="px-5">My Targets</h1>
<hr />
<div class="d-flex justify-content-between align-items-start px-4">
	<div class="btn-group">
		<a class="btn btn-success" asp-action="CreateTarget"><i class="fa-plus"></i> Create New Target</a>
	</div>
	<div>
		<form class="input-group">
			<input class="input-group-text" type="search" name="" value="" />
			<button class="btn btn-outline-success" type="submit">Search</button>
		</form>
	</div>
</div>
<div class="d-flex flex-column px-3">
	@{
		string GetPiroity(int PiroityId)
		{
			switch (PiroityId)
			{
				case 1:
					return "text-bg-danger";
				case 2:
					return "text-bg-warning";
				default:
					return "text-bg-info";
			}
		}

		DateTime addTime(DateTime dateTime, int TargetPeriodTypeId, int PeridodLength)
		{
			switch (TargetPeriodTypeId)
			{
				case 1:
					return dateTime.AddDays(PeridodLength);
				case 2:
					return dateTime.AddDays(7*PeridodLength);
				case 3:
					return dateTime.AddMonths(PeridodLength);
				case 4:
					return dateTime.AddYears(PeridodLength);
				default:
					return DateTime.Now;
			}
		}

		
		/*
	for(int i = 0; i<10; i++)
	{
		<div class="border rounded px-5 py-5 my-3">
			<div class="fs-3 px-2 d-flex justify-content-between align-items-start">
				<p>
					My Target Name
				</p>
				<span class="text-end badge text-bg-info rounded-pill">
					Öncelik
				</span>
			</div>
			<hr />
			<div class="px-2 list-group">
				<li class="list-group-item list-group-item-action">Description</li>
				<li class="list-group-item list-group-item-action">Period / Count</li>
				<li class="list-group-item list-group-item-action">Last period time</li>
				<li class="list-group-item list-group-item-action">Lastest status added date</li>
			</div>
			<div class="d-flex justify-content-end my-3 px-2">
				<div class="btn-group">
					<a class="btn btn-outline-success"><i class="fa-plus"></i> Add New Target Status</a>
					<a class="btn btn-primary">Details</a>
				</div>
			</div>
		</div>
	}
*/
		foreach(Target target in Model)
		{
			var endDate = @addTime(target.PeriodTime, target.TargetPeriodType!.Id, target.PeriodLength);

			<div class="border rounded px-5 py-5 my-3">
				<div class="fs-3 px-5 d-flex justify-content-between align-items-start">
					<p>
						@target.Name
					</p>
					<div>
						@if(target.TargetStatuses.Select(ts => ts.Attime > @target.PeriodTime && ts.Attime < endDate).Count() < target.Count){
							<span class="text-end badge text-bg-warning rounded-pill">
								Not Done
							</span>
						}
						<span class="text-end badge @GetPiroity(target.TargetPiroityId) rounded-pill">
							@target.TargetPiroity!.Name
						</span>
					</div>
				</div>
				<hr />
				<div class="px-4 list-group">
					<li class="list-group-item list-group-item-action">Description: @target.Description</li>
					<li class="list-group-item list-group-item-action">@target.Count times per @target.PeriodLength @target.TargetPeriodType.Name</li>
					<li class="list-group-item list-group-item-action">Period Date: @target.PeriodTime</li>
					<li class="list-group-item list-group-item-action">Period End Date: @endDate</li>
					@{
						if (target.TargetStatuses.FirstOrDefault() is not null)
						{
							<li class="list-group-item list-group-item-action">@target.TargetStatuses.FirstOrDefault()?.Attime}</li>
						}
						else
						{
							<li class="list-group-item list-group-item-action text-info">No status added yet</li>
						}
					}
				</div>
				<div class="d-flex justify-content-end my-3 px-4">
					<div class="btn-group">
						<a class="btn btn-outline-success" asp-action="NewTargetStatus" asp-route-TargetId="@target.Id"><i class="fa-plus"></i> Add New Target Status</a>
						<a class="btn btn-primary"><i class="fa-solid fa-bars"></i> Edit Target</a>
						<a class="btn btn-primary" asp-action="TargetDetails" asp-route-TargetId="@target.Id">Details</a>
					</div>
				</div>
			</div>
		}
}
</div>
