@model PasswordUpdateDto

<form method="post" asp-action="Password" class="needs-validation" novalidate>
	<a class="fs-1 text-black link-underline link-underline-opacity-0" asp-action=""><i class="fa-solid fa-arrow-left"></i> Password</a>
	<div class="form-group my-2">
		<label asp-for="CurrentPassword">Current Password</label>
		<input asp-for="CurrentPassword" class="form-control @(ViewData.ModelState["CurrentPassword"]?.Errors.Count() > 0?"is-invalid":"")" title="">
		<div id="Email" class="invalid-feedback">
			@{
				if (ViewData?.ModelState?.TryGetValue("CurrentPassword", out var modelStateEntry) == true)
					foreach (var err in modelStateEntry.Errors)
					{
						@err.ErrorMessage
						<br />
					}
			}
		</div>
	</div>
	<div class="form-group my-2">
		<label asp-for="Password">New Password</label>
		<input asp-for="Password" class="form-control @(ViewData?.ModelState["Password"]?.Errors.Count() > 0?"is-invalid":"")" title="">
		<div id="Email" class="invalid-feedback">
			@{
				if (ViewData?.ModelState?.TryGetValue("Password", out modelStateEntry) == true)
					foreach (var err in modelStateEntry.Errors)
					{
						@err.ErrorMessage
						<br />
					}
			}
		</div>
	</div>
	<div class="form-group my-2">
		<label asp-for="ValidatePassword">Validate Password</label>
		<input asp-for="ValidatePassword" class="form-control @(ViewData?.ModelState["ValidatePassword"]?.Errors.Count() > 0?"is-invalid":"")" title="">
		<div id="Email" class="invalid-feedback">
			@{
				if (ViewData?.ModelState?.TryGetValue("ValidatePassword", out modelStateEntry) == true)
					foreach (var err in modelStateEntry.Errors)
					{
						@err.ErrorMessage
						<br />
					}
			}
		</div>
	</div>
	<div class="form-group my-2">
		<button type="submit" class="btn btn-primary w-100">Save</button>
	</div>
</form>